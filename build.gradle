plugins {
    id "io.spring.dependency-management" version "1.0.6.RELEASE"
    id "com.github.johnrengelman.shadow" version "4.0.0"
    id "de.sebastianboegl.shadow.transformer.log4j" version "2.1.1"
    id "jp.classmethod.aws.lambda" version "0.38"
    id "net.ltgt.apt-eclipse" version "0.18"
    id "net.ltgt.apt-idea" version "0.18"	
}

apply plugin:"application"
apply plugin:"java"

version "0.1"
group "slack.message"

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
}

dependencyManagement {
    imports {
        mavenBom 'io.micronaut:micronaut-bom:1.0.0'
    }
}

dependencies {
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-validation"
    
    compile "io.micronaut:micronaut-http-client"
    compile "io.micronaut:micronaut-function-aws"
    compile "io.micronaut:micronaut-inject"
    compile "io.micronaut:micronaut-validation"
    compile "io.micronaut:micronaut-runtime"
    compileOnly "io.micronaut:micronaut-inject-java"
    
    runtime "ch.qos.logback:logback-classic:1.2.3"
    runtime "com.amazonaws:aws-lambda-java-log4j2:1.0.0"
    runtime "org.apache.logging.log4j:log4j-slf4j-impl:2.9.1"
    runtime 'com.amazonaws:aws-java-sdk-lambda:1.11.285'
    
    testCompile "org.junit.jupiter:junit-jupiter-api:5.3.1"
    testCompile "org.junit.jupiter:junit-jupiter-engine:5.3.1"
    testCompile "io.micronaut:micronaut-inject-java"
    testCompile "io.micronaut:micronaut-function-client"
    testCompile "io.micronaut.test:micronaut-test-junit5:1.0.0.RC2"
    testCompile "org.mockito:mockito-junit-jupiter:2.22.0"
    
    testRuntime "io.micronaut:micronaut-http-server-netty"
    testRuntime "io.micronaut:micronaut-function-web"
}

shadowJar {
    mergeServiceFiles()
}

run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1')
mainClassName = "io.micronaut.function.executor.FunctionApplication"
//mainClassName = "slack.message.Application"
applicationDefaultJvmArgs = [""]
archivesBaseName = 'slack-message'

jar {
    manifest {
        attributes 'Main-Class': mainClassName
    }
}

lambda {
    region = "eu-west-1"
}

if(new File("${System.getProperty("user.home")}/.aws/credentials").exists()) {
    task deploy(type: jp.classmethod.aws.gradle.lambda.AWSLambdaMigrateFunctionTask, dependsOn: shadowJar) {
        functionName = "slack-message"
        handler = "io.micronaut.function.aws.MicronautRequestStreamHandler"
        role = "arn:aws:iam::669303278588:role/lambda-poweruser"
        runtime = com.amazonaws.services.lambda.model.Runtime.Java8
        zipFile = shadowJar.archivePath
        memorySize = 256
        timeout = 60
        publish = true
    }

}
compileJava.options.compilerArgs += '-parameters'
compileTestJava.options.compilerArgs += '-parameters'

// use JUnit 5 platform
test {
    useJUnitPlatform()
}